---
description: 
globs: 
alwaysApply: false
---
# 컴포넌트 패턴

이 프로젝트의 컴포넌트는 다음과 같은 일관된 패턴을 따릅니다.

## 컴포넌트 구조

컴포넌트는 다음과 같은 구조로 조직됩니다:

```
src/components/
  └── ComponentName/
      ├── index.tsx        # 외부로 노출되는 컴포넌트 정의 및 내보내기
      ├── index.stories.tsx # Storybook 스토리 파일
      └── module/          # 내부 하위 컴포넌트
          ├── ComponentModule1.tsx
          ├── ComponentModule2.tsx
          └── components/  # 더 작은 단위의 컴포넌트
```

예시: [src/components/Casting/index.tsx](mdc:src/components/Casting/index.tsx)

## 컴포넌트 패턴

1. **복합 컴포넌트 패턴**
   - 관련 컴포넌트를 하나의 네임스페이스로 그룹화
   - 예: `Casting.Fixed`, `Casting.Responsive` 등

2. **모듈 분리**
   - 복잡한 컴포넌트는 module/ 디렉토리에 분리
   - 재사용 가능한 작은 컴포넌트는 components/ 하위 디렉토리에 배치

3. **Storybook 통합**
   - 각 컴포넌트는 해당하는 Storybook 스토리 파일을 가짐
   - 다양한 상태와 변형을 문서화
